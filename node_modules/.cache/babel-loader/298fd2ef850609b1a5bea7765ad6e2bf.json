{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdDeleteOutline, MdOutlineColorLens } from \"react-icons/md\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { useGlobalContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Task = _ref => {\n  _s();\n\n  let {\n    id,\n    name,\n    completed,\n    color,\n    index\n  } = _ref;\n  const {\n    removeTask,\n    toggleDone,\n    editTask,\n    showColors\n  } = useGlobalContext();\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: \"draggable-\" + id,\n    index: index,\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"li\", {\n      ref: provided.innerRef,\n      ...provided.draggableProps,\n      ...provided.dragHandleProps,\n      style: { ...provided.draggableProps.style,\n        boxShadow: snapshot.isDragging ? \"0 0 5rem #666\" : \"none\",\n        opacity: snapshot.isDragging ? \"1\" : provided.draggableProps.style.opacity,\n        backgroundColor: color\n      },\n      className: `task ${completed && \"task-done\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleDone(id),\n        children: completed ? /*#__PURE__*/_jsxDEV(MdCheckBox, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(MdCheckBoxOutlineBlank, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTask(id),\n        children: /*#__PURE__*/_jsxDEV(MdDeleteOutline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => editTask(id),\n        children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-colors\",\n        onClick: e => showColors(e, id),\n        children: /*#__PURE__*/_jsxDEV(MdOutlineColorLens, {\n          className: \"preventClick\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Task, \"ZGQB2S18mfyET97FXYAaeiinan0=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/Task.js"],"names":["React","Draggable","MdCheckBoxOutlineBlank","MdCheckBox","MdDeleteOutline","MdOutlineColorLens","FiEdit","useGlobalContext","Task","id","name","completed","color","index","removeTask","toggleDone","editTask","showColors","provided","snapshot","innerRef","draggableProps","dragHandleProps","style","boxShadow","isDragging","opacity","backgroundColor","e"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SACEC,sBADF,EAEEC,UAFF,EAGEC,eAHF,EAIEC,kBAJF,QAKO,gBALP;AAMA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,MAAMC,IAAI,GAAG,QAA2C;AAAA;;AAAA,MAA1C;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA,KAAvB;AAA8BC,IAAAA;AAA9B,GAA0C;AACtD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,QAA1B;AAAoCC,IAAAA;AAApC,MAAmDV,gBAAgB,EAAzE;AAEA,sBACE,QAAC,SAAD;AAAoB,IAAA,WAAW,EAAE,eAAeE,EAAhD;AAAoD,IAAA,KAAK,EAAEI,KAA3D;AAAA,cACG,CAACK,QAAD,EAAWC,QAAX,kBACC;AACE,MAAA,GAAG,EAAED,QAAQ,CAACE,QADhB;AAAA,SAEMF,QAAQ,CAACG,cAFf;AAAA,SAGMH,QAAQ,CAACI,eAHf;AAIE,MAAA,KAAK,EAAE,EACL,GAAGJ,QAAQ,CAACG,cAAT,CAAwBE,KADtB;AAELC,QAAAA,SAAS,EAAEL,QAAQ,CAACM,UAAT,GAAsB,eAAtB,GAAwC,MAF9C;AAGLC,QAAAA,OAAO,EAAEP,QAAQ,CAACM,UAAT,GACL,GADK,GAELP,QAAQ,CAACG,cAAT,CAAwBE,KAAxB,CAA8BG,OAL7B;AAMLC,QAAAA,eAAe,EAAEf;AANZ,OAJT;AAYE,MAAA,SAAS,EAAG,QAAOD,SAAS,IAAI,WAAY,EAZ9C;AAAA,8BAcE;AAAA,kBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,cAdF,eAeE;AAAQ,QAAA,OAAO,EAAE,MAAMK,UAAU,CAACN,EAAD,CAAjC;AAAA,kBACGE,SAAS,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAAH,gBAAoB,QAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AADhC;AAAA;AAAA;AAAA;AAAA,cAfF,eAkBE;AAAQ,QAAA,OAAO,EAAE,MAAMG,UAAU,CAACL,EAAD,CAAjC;AAAA,+BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF,eAqBE;AAAQ,QAAA,OAAO,EAAE,MAAMO,QAAQ,CAACP,EAAD,CAA/B;AAAA,+BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF,eAwBE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAGmB,CAAD,IAAOX,UAAU,CAACW,CAAD,EAAInB,EAAJ,CAAzD;AAAA,+BACE,QAAC,kBAAD;AAAoB,UAAA,SAAS,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ,KAAgBA,EAAhB;AAAA;AAAA;AAAA;AAAA,UADF;AAkCD,CArCD;;GAAMD,I;UACqDD,gB;;;KADrDC,I;AAuCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport {\n  MdCheckBoxOutlineBlank,\n  MdCheckBox,\n  MdDeleteOutline,\n  MdOutlineColorLens,\n} from \"react-icons/md\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { useGlobalContext } from \"./context\";\n\nconst Task = ({ id, name, completed, color, index }) => {\n  const { removeTask, toggleDone, editTask, showColors } = useGlobalContext();\n\n  return (\n    <Draggable key={id} draggableId={\"draggable-\" + id} index={index}>\n      {(provided, snapshot) => (\n        <li\n          ref={provided.innerRef}\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          style={{\n            ...provided.draggableProps.style,\n            boxShadow: snapshot.isDragging ? \"0 0 5rem #666\" : \"none\",\n            opacity: snapshot.isDragging\n              ? \"1\"\n              : provided.draggableProps.style.opacity,\n            backgroundColor: color,\n          }}\n          className={`task ${completed && \"task-done\"}`}\n        >\n          <p>{name}</p>\n          <button onClick={() => toggleDone(id)}>\n            {completed ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n          </button>\n          <button onClick={() => removeTask(id)}>\n            <MdDeleteOutline />\n          </button>\n          <button onClick={() => editTask(id)}>\n            <FiEdit />\n          </button>\n          <button className='btn-colors' onClick={(e) => showColors(e, id)}>\n            <MdOutlineColorLens className='preventClick' />\n          </button>\n        </li>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}