{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport List from \"./List\";\nimport { AppContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    inputRef,\n    tasks,\n    setTasks,\n    isEditing,\n    setIsEditing,\n    editId,\n    setEditId,\n    name,\n    setName,\n    filter,\n    setFilter\n  } = useContext(AppContext);\n\n  const addTask = e => {\n    e.preventDefault();\n\n    if (!name) {\n      return;\n    } else if (name && isEditing) {\n      setTasks(tasks.map(task => {\n        return task.id === editId ? { ...task,\n          name: name\n        } : task;\n      }));\n      setIsEditing(false);\n      setEditId(null);\n      setName(\"\");\n    } else {\n      const newTask = {\n        id: uuid().slice(0, 8),\n        name: name,\n        completed: false,\n        color: \"#009688\"\n      };\n      setTasks([...tasks, newTask]);\n      setName(\"\");\n    }\n  };\n\n  const filterTasks = e => {\n    setFilter(e.target.dataset[\"filter\"]);\n  };\n\n  const deleteAll = () => {\n    setTasks([]);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [inputRef, tasks]);\n\n  const handleDragEnd = param => {\n    var _param$destination;\n\n    const srcI = param.source.index;\n    const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index;\n\n    if (desI) {\n      const reOrdered = [...tasks];\n      reOrdered.splice(desI, 0, reOrdered.splice(srcI, 1)[0]);\n      setTasks(reOrdered);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"head\",\n      onSubmit: addTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        placeholder: \"New Task\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? \"Edit\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-filter\": \"all\",\n        className: filter === \"all\" ? \"active\" : \"\",\n        onClick: filterTasks,\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-filter\": \"completed\",\n        className: filter === \"completed\" ? \"active\" : \"\",\n        onClick: filterTasks,\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-filter\": \"uncompleted\",\n        className: filter === \"uncompleted\" ? \"active\" : \"\",\n        onClick: filterTasks,\n        children: \"Uncompleted\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: tasks.length > 0 ? /*#__PURE__*/_jsxDEV(List, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-tasks\",\n        children: \"Your list is clear!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), tasks.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-delete-all\",\n      onClick: deleteAll,\n      title: \"Delete All Tasks (Completed and Uncompleted)!\",\n      children: \"Clear All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Ok5daWqWMycv7IGyUDNPI4jaqrM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/App.js"],"names":["React","useEffect","useContext","v4","uuid","DragDropContext","List","AppContext","App","inputRef","tasks","setTasks","isEditing","setIsEditing","editId","setEditId","name","setName","filter","setFilter","addTask","e","preventDefault","map","task","id","newTask","slice","completed","color","filterTasks","target","dataset","deleteAll","current","focus","localStorage","setItem","JSON","stringify","handleDragEnd","param","srcI","source","index","desI","destination","reOrdered","splice","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport List from \"./List\";\nimport { AppContext } from \"./context\";\n\nconst App = () => {\n  const {\n    inputRef,\n    tasks,\n    setTasks,\n    isEditing,\n    setIsEditing,\n    editId,\n    setEditId,\n    name,\n    setName,\n    filter,\n    setFilter\n  } = useContext(AppContext);\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if (!name) {\n      return;\n    } else if (name && isEditing) {\n      setTasks(\n        tasks.map((task) => {\n          return task.id === editId ? { ...task, name: name } : task;\n        })\n      );\n      setIsEditing(false);\n      setEditId(null);\n      setName(\"\");\n    } else {\n      const newTask = {\n        id: uuid().slice(0, 8),\n        name: name,\n        completed: false,\n        color: \"#009688\",\n      };\n      setTasks([...tasks, newTask]);\n      setName(\"\");\n    }\n  };\n\n  const filterTasks = (e) => {\n    setFilter(e.target.dataset[\"filter\"]);\n  };\n\n  const deleteAll = () => {\n    setTasks([]);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [inputRef, tasks]);\n\n  const handleDragEnd = (param) => {\n    const srcI = param.source.index;\n    const desI = param.destination?.index;\n    if (desI) {\n      const reOrdered = [...tasks];\n      reOrdered.splice(desI, 0, reOrdered.splice(srcI, 1)[0]);\n      setTasks(reOrdered);\n    }\n  };\n\n  return (\n    <div className='container'>\n      <form className='head' onSubmit={addTask}>\n        <input\n          type='text'\n          ref={inputRef}\n          placeholder='New Task'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button type='submit'>{isEditing ? \"Edit\" : \"Add\"}</button>\n      </form>\n      <div className='filter'>\n        <button\n          data-filter='all'\n          className={filter === \"all\" ? \"active\" : \"\"}\n          onClick={filterTasks}\n        >\n          All\n        </button>\n        <button\n          data-filter='completed'\n          className={filter === \"completed\" ? \"active\" : \"\"}\n          onClick={filterTasks}\n        >\n          Completed\n        </button>\n        <button\n          data-filter='uncompleted'\n          className={filter === \"uncompleted\" ? \"active\" : \"\"}\n          onClick={filterTasks}\n        >\n          Uncompleted\n        </button>\n      </div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {tasks.length > 0 ? (\n          <List />\n        ) : (\n          <p className='no-tasks'>Your list is clear!</p>\n        )}\n      </DragDropContext>\n      {tasks.length > 2 && (\n        <button\n          className='btn-delete-all'\n          onClick={deleteAll}\n          title='Delete All Tasks (Completed and Uncompleted)!'\n        >\n          Clear All\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}