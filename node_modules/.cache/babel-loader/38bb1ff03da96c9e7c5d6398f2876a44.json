{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\DarkModeToggle.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './DarkModeToggle.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getUserTheme = () => {\n  const theme = localStorage.getItem('theme') || 'dark';\n  return theme === 'dark' ? true : false;\n};\n\nconst DarkModeToggle = () => {\n  _s();\n\n  const [isDarkMode, setIsDarkMode] = useState(getUserTheme());\n  useEffect(() => {\n    document.documentElement.className = `${isDarkMode && 'dark'}`;\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toggle-btn\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: \"toggle\",\n      checked: isDarkMode,\n      onChange: e => setIsDarkMode(e.target.checked)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"toggle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_s(DarkModeToggle, \"Fg0xTyQ3in8PBnRUXWzUFehQRjE=\");\n\n_c = DarkModeToggle;\nexport default DarkModeToggle;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/DarkModeToggle.js"],"names":["React","useState","useEffect","getUserTheme","theme","localStorage","getItem","DarkModeToggle","isDarkMode","setIsDarkMode","document","documentElement","className","setItem","e","target","checked"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,uBAAP;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAC1B,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,MAA/C;AACA,SAAOF,KAAK,KAAK,MAAV,GAAmB,IAAnB,GAA0B,KAAjC;AACA,CAHD;;AAKA,MAAMG,cAAc,GAAG,MAAM;AAAA;;AAC5B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAACE,YAAY,EAAb,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfQ,IAAAA,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAsC,GAAEJ,UAAU,IAAI,MAAO,EAA7D;AACAH,IAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BL,UAAU,GAAG,MAAH,GAAY,OAApD;AACA,GAHQ,EAGN,CAACA,UAAD,CAHM,CAAT;AAKA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,EAAE,EAAC,QAA1B;AAAmC,MAAA,OAAO,EAAEA,UAA5C;AAAwD,MAAA,QAAQ,EAAGM,CAAD,IAAOL,aAAa,CAACK,CAAC,CAACC,MAAF,CAASC,OAAV;AAAtF;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAO,MAAA,OAAO,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CAdD;;GAAMT,c;;KAAAA,c;AAgBN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './DarkModeToggle.scss';\n\nconst getUserTheme = () => {\n\tconst theme = localStorage.getItem('theme') || 'dark';\n\treturn theme === 'dark' ? true : false;\n};\n\nconst DarkModeToggle = () => {\n\tconst [isDarkMode, setIsDarkMode] = useState(getUserTheme());\n\t\n\tuseEffect(() => {\n\t\tdocument.documentElement.className = `${isDarkMode && 'dark'}`;\n\t\tlocalStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n\t}, [isDarkMode])\n\t\n\treturn (\n\t\t<div className='toggle-btn'>\n\t\t\t<input type=\"checkbox\" id=\"toggle\" checked={isDarkMode} onChange={(e) => setIsDarkMode(e.target.checked)}/>\n\t\t\t<label htmlFor=\"toggle\"></label>\n\t\t</div>\n\t)\n}\n\nexport default DarkModeToggle"]},"metadata":{},"sourceType":"module"}