{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport { FaGithub } from 'react-icons/fa';\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport TaskItem from \"./TaskItem\";\nimport { AppContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const {\n    inputRef,\n    tasks,\n    setTasks,\n    alert,\n    showAlert,\n    isEditing,\n    setIsEditing,\n    editId,\n    setEditId,\n    name,\n    setName,\n    filter,\n    setFilter,\n    setIsColorsOpen\n  } = useContext(AppContext);\n\n  const addTask = e => {\n    e.preventDefault();\n\n    if (!name) {\n      showAlert(true, \"Invalid Task Name!\");\n    } else if (name && isEditing) {\n      setTasks(tasks.map(task => {\n        return task.id === editId ? { ...task,\n          name: name\n        } : task;\n      }));\n      setIsEditing(false);\n      setEditId(null);\n      setName(\"\");\n      showAlert(true, \"Task Edited.\");\n    } else {\n      const newTask = {\n        id: uuid().slice(0, 8),\n        name: name,\n        completed: false,\n        color: \"#009688\"\n      };\n      setTasks([...tasks, newTask]);\n      showAlert(true, \"Task Added.\");\n      setName(\"\");\n    }\n  };\n\n  const filterTasks = e => {\n    setFilter(e.target.dataset[\"filter\"]);\n  };\n\n  const deleteAll = () => {\n    setTasks([]);\n    showAlert(true, \"Your list is clear!\");\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [inputRef, tasks]);\n\n  const handleDragEnd = param => {\n    var _param$destination;\n\n    const srcI = param.source.index;\n    const desI = (_param$destination = param.destination) === null || _param$destination === void 0 ? void 0 : _param$destination.index;\n\n    if (desI) {\n      const reOrdered = [...tasks];\n      reOrdered.splice(desI, 0, reOrdered.splice(srcI, 1)[0]);\n      setTasks(reOrdered);\n    }\n  };\n\n  const hideColorsContainer = e => {\n    if (e.target.classList.contains(\"btn-colors\")) return;\n    setIsColorsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    onClick: hideColorsContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"head\",\n      onSubmit: addTask,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: inputRef,\n        placeholder: \"New Task\",\n        value: name,\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? \"Edit\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-filter\": \"uncompleted\",\n        className: filter === \"uncompleted\" ? \"active\" : \"\",\n        onClick: filterTasks,\n        children: \"Not done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: tasks.length > 0 ? /*#__PURE__*/_jsxDEV(TaskItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-tasks\",\n        children: \"Your list is clear!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), tasks.length > 2 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-delete-all\",\n      onClick: deleteAll,\n      title: \"Delete All Tasks (Done & Not done)!\",\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"ts/GrlsfE7uiG5M33YR9zQjsnVw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/App.js"],"names":["React","useEffect","useContext","FaGithub","v4","uuid","DragDropContext","TaskItem","AppContext","App","inputRef","tasks","setTasks","alert","showAlert","isEditing","setIsEditing","editId","setEditId","name","setName","filter","setFilter","setIsColorsOpen","addTask","e","preventDefault","map","task","id","newTask","slice","completed","color","filterTasks","target","dataset","deleteAll","current","focus","localStorage","setItem","JSON","stringify","handleDragEnd","param","srcI","source","index","desI","destination","reOrdered","splice","hideColorsContainer","classList","contains","value","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport { FaGithub } from 'react-icons/fa';\nimport { v4 as uuid } from \"uuid\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport TaskItem from \"./TaskItem\";\nimport { AppContext } from \"./context\"; \nconst App = () => {\n  const {\n    inputRef,\n    tasks,\n    setTasks,\n    alert,\n    showAlert,\n    isEditing,\n    setIsEditing,\n    editId,\n    setEditId,\n    name,\n    setName,\n    filter,\n    setFilter,\n    setIsColorsOpen,\n  } = useContext(AppContext);\n\n  const addTask = (e) => {\n    e.preventDefault();\n    if (!name) {\n      showAlert(true, \"Invalid Task Name!\");\n    } else if (name && isEditing) {\n      setTasks(\n        tasks.map((task) => {\n          return task.id === editId ? { ...task, name: name } : task;\n        })\n      );\n      setIsEditing(false);\n      setEditId(null);\n      setName(\"\");\n      showAlert(true, \"Task Edited.\");\n    } else {\n      const newTask = {\n        id: uuid().slice(0, 8),\n        name: name,\n        completed: false,\n        color: \"#009688\",\n      };\n      setTasks([...tasks, newTask]);\n      showAlert(true, \"Task Added.\");\n      setName(\"\");\n    }\n  };\n\n  const filterTasks = (e) => {\n    setFilter(e.target.dataset[\"filter\"]);\n  };\n\n  const deleteAll = () => {\n    setTasks([]);\n    showAlert(true, \"Your list is clear!\");\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [inputRef, tasks]);\n\n  const handleDragEnd = (param) => {\n    const srcI = param.source.index;\n    const desI = param.destination?.index;\n    if (desI) {\n      const reOrdered = [...tasks];\n      reOrdered.splice(desI, 0, reOrdered.splice(srcI, 1)[0]);\n      setTasks(reOrdered);\n    }\n  };\n\n  const hideColorsContainer = (e) => {\n    if (e.target.classList.contains(\"btn-colors\")) return;\n    setIsColorsOpen(false);\n  };\n\n  return (\n    <div className='container' onClick={hideColorsContainer}>\n     \n      <form className='head' onSubmit={addTask}>\n        <input\n          type='text'\n          ref={inputRef}\n          placeholder='New Task'\n          value={name}\n          onChange={(e) => setName(e.target.value)}\n        />\n        <button type='submit'>{isEditing ? \"Edit\" : \"Add\"}</button>\n      </form>\n      <div className='filter'>\n        \n        <button\n          data-filter='uncompleted'\n          className={filter === \"uncompleted\" ? \"active\" : \"\"}\n          onClick={filterTasks}\n        >\n          Not done\n        </button>\n      </div>\n      <DragDropContext onDragEnd={handleDragEnd}>\n        {tasks.length > 0 ? (\n          <TaskItem />\n        ) : (\n          <p className='no-tasks'>Your list is clear!</p>\n        )}\n      </DragDropContext>\n      {tasks.length > 2 && (\n        <button\n          className='btn-delete-all'\n          onClick={deleteAll}\n          title='Delete All Tasks (Done & Not done)!'\n        >\n          Clear \n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}