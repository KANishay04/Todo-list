{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\Colors.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useRef } from \"react\";\n// import { useGlobalContext } from \"./context\";\n// const Colors = () => {\n//   const { location, setIsColorsOpen, tasks, setTasks } = useGlobalContext();\n//   const colorsRef = useRef(null);\n//   useEffect(() => {\n//     const { top, right } = location;\n//     colorsRef.current.style.left = `${right + 30}px`;\n//     colorsRef.current.style.top = `${top - 20}px`;\n//   }, [location]);\n//   const changeColor = (e) => {\n//     const color = e.target.style.backgroundColor;\n//     const { id } = location;\n//     setTasks(\n//       tasks.map((task) => {\n//         return task.id === id ? { ...task, color: color } : task;\n//       })\n//     );\n//     setIsColorsOpen(false);\n//   };\n//   return (\n//     <div ref={colorsRef} className='color-container'>\n//       <span style={{ backgroundColor: \"#eb1313\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#e91e63\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#673ab7\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#009688\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#4caf50\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#00bcd4\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#ff5722\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#607d8b\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#795548\" }} onClick={changeColor}></span>\n//     </div>\n//   );\n// };\n// export default Colors;\nimport React, { useEffect, useRef } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Colors = () => {\n  _s();\n\n  const {\n    location,\n    setIsColorsOpen,\n    tasks,\n    setTasks\n  } = useGlobalContext();\n  const colorsRef = useRef(null);\n  useEffect(() => {\n    const {\n      top,\n      right\n    } = location;\n    colorsRef.current.style.left = `${right + 30}px`;\n    colorsRef.current.style.top = `${top - 20}px`;\n  }, [location]);\n\n  const changeColor = e => {\n    const color = `rgb(238, 174, 202)`; // Изменяем цвет на указанный RGB\n\n    const {\n      id\n    } = location;\n    setTasks(tasks.map(task => {\n      return task.id === id ? { ...task,\n        color: color\n      } : task;\n    }));\n    setIsColorsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: colorsRef,\n    className: \"color-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: \"rgb(238, 174, 202)\"\n      },\n      onClick: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: \"rgb(238, 174, 202)\"\n      },\n      onClick: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: \"rgb(238, 174, 202)\"\n      },\n      onClick: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        backgroundColor: \"rgb(238, 174, 202)\"\n      },\n      onClick: changeColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Colors, \"Shrgz2s4QAdPboF1J5wkriQntgo=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Colors;\nexport default Colors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/Colors.js"],"names":["React","useEffect","useRef","useGlobalContext","Colors","location","setIsColorsOpen","tasks","setTasks","colorsRef","top","right","current","style","left","changeColor","e","color","id","map","task","backgroundColor"],"mappings":";;;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,gBAAT,QAAiC,WAAjC;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAiDL,gBAAgB,EAAvE;AACA,QAAMM,SAAS,GAAGP,MAAM,CAAC,IAAD,CAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAES,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAiBN,QAAvB;AACAI,IAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB,CAAwBC,IAAxB,GAAgC,GAAEH,KAAK,GAAG,EAAG,IAA7C;AACAF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB,CAAwBH,GAAxB,GAA+B,GAAEA,GAAG,GAAG,EAAG,IAA1C;AACD,GAJQ,EAIN,CAACL,QAAD,CAJM,CAAT;;AAMA,QAAMU,WAAW,GAAIC,CAAD,IAAO;AACzB,UAAMC,KAAK,GAAI,oBAAf,CADyB,CACW;;AACpC,UAAM;AAAEC,MAAAA;AAAF,QAASb,QAAf;AACAG,IAAAA,QAAQ,CACND,KAAK,CAACY,GAAN,CAAWC,IAAD,IAAU;AAClB,aAAOA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWH,QAAAA,KAAK,EAAEA;AAAlB,OAAjB,GAA6CG,IAApD;AACD,KAFD,CADM,CAAR;AAKAd,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,GAAG,EAAEG,SAAV;AAAqB,IAAA,SAAS,EAAC,iBAA/B;AAAA,4BACE;AAAM,MAAA,KAAK,EAAE;AAAEY,QAAAA,eAAe,EAAE;AAAnB,OAAb;AAAwD,MAAA,OAAO,EAAEN;AAAjE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB,OAAb;AAAwD,MAAA,OAAO,EAAEN;AAAjE;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB,OAAb;AAAwD,MAAA,OAAO,EAAEN;AAAjE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,eAAe,EAAE;AAAnB,OAAb;AAAwD,MAAA,OAAO,EAAEN;AAAjE;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;GAAMX,M;UACmDD,gB;;;KADnDC,M;AAgCN,eAAeA,MAAf","sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import { useGlobalContext } from \"./context\";\n\n// const Colors = () => {\n//   const { location, setIsColorsOpen, tasks, setTasks } = useGlobalContext();\n//   const colorsRef = useRef(null);\n\n//   useEffect(() => {\n//     const { top, right } = location;\n//     colorsRef.current.style.left = `${right + 30}px`;\n//     colorsRef.current.style.top = `${top - 20}px`;\n//   }, [location]);\n\n//   const changeColor = (e) => {\n//     const color = e.target.style.backgroundColor;\n//     const { id } = location;\n//     setTasks(\n//       tasks.map((task) => {\n//         return task.id === id ? { ...task, color: color } : task;\n//       })\n//     );\n//     setIsColorsOpen(false);\n//   };\n\n//   return (\n//     <div ref={colorsRef} className='color-container'>\n//       <span style={{ backgroundColor: \"#eb1313\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#e91e63\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#673ab7\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#009688\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#4caf50\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#00bcd4\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#ff5722\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#607d8b\" }} onClick={changeColor}></span>\n//       <span style={{ backgroundColor: \"#795548\" }} onClick={changeColor}></span>\n//     </div>\n//   );\n// };\n\n// export default Colors;\nimport React, { useEffect, useRef } from \"react\";\nimport { useGlobalContext } from \"./context\";\n\nconst Colors = () => {\n  const { location, setIsColorsOpen, tasks, setTasks } = useGlobalContext();\n  const colorsRef = useRef(null);\n\n  useEffect(() => {\n    const { top, right } = location;\n    colorsRef.current.style.left = `${right + 30}px`;\n    colorsRef.current.style.top = `${top - 20}px`;\n  }, [location]);\n\n  const changeColor = (e) => {\n    const color = `rgb(238, 174, 202)`; // Изменяем цвет на указанный RGB\n    const { id } = location;\n    setTasks(\n      tasks.map((task) => {\n        return task.id === id ? { ...task, color: color } : task;\n      })\n    );\n    setIsColorsOpen(false);\n  };\n\n  return (\n    <div ref={colorsRef} className='color-container'>\n      <span style={{ backgroundColor: \"rgb(238, 174, 202)\" }} onClick={changeColor}></span>\n      <span style={{ backgroundColor: \"rgb(238, 174, 202)\" }} onClick={changeColor}></span>\n      <span style={{ backgroundColor: \"rgb(238, 174, 202)\" }} onClick={changeColor}></span>\n      <span style={{ backgroundColor: \"rgb(238, 174, 202)\" }} onClick={changeColor}></span>\n      \n    </div>\n  );\n};\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}