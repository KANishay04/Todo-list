{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HOME\\\\Todo-list\\\\todo-list\\\\src\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { useContext } from \"./context\";\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const {\n    tasks,\n    filter\n  } = useContext();\n  let filtred = [...tasks];\n\n  switch (filter) {\n    case \"all\":\n      filtred = [...tasks];\n      break;\n\n    case \"completed\":\n      filtred = tasks.filter(task => task.completed);\n      break;\n\n    case \"uncompleted\":\n      filtred = tasks.filter(task => !task.completed);\n      break;\n\n    default:\n      filtred = [...tasks];\n      break;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Droppable, {\n    droppableId: \"droppable-1\",\n    children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tasks-wrapper\",\n      ref: provided.innerRef,\n      ...provided.droppableProps,\n      children: [filtred.map((task, i) => /*#__PURE__*/_jsxDEV(Task, { ...task,\n        index: i\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)), provided.placeholder]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"2fktRPvMr3GH3XrVv2lsWOHL8Yg=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/HOME/Todo-list/todo-list/src/List.js"],"names":["React","Droppable","useContext","Task","List","tasks","filter","filtred","task","completed","provided","snapshot","innerRef","droppableProps","map","i","id","placeholder"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBJ,UAAU,EAApC;AAEA,MAAIK,OAAO,GAAG,CAAC,GAAGF,KAAJ,CAAd;;AAEA,UAAQC,MAAR;AACE,SAAK,KAAL;AACEC,MAAAA,OAAO,GAAG,CAAC,GAAGF,KAAJ,CAAV;AACA;;AACF,SAAK,WAAL;AACEE,MAAAA,OAAO,GAAGF,KAAK,CAACC,MAAN,CAAcE,IAAD,IAAUA,IAAI,CAACC,SAA5B,CAAV;AACA;;AACF,SAAK,aAAL;AACEF,MAAAA,OAAO,GAAGF,KAAK,CAACC,MAAN,CAAcE,IAAD,IAAU,CAACA,IAAI,CAACC,SAA7B,CAAV;AACA;;AACF;AACEF,MAAAA,OAAO,GAAG,CAAC,GAAGF,KAAJ,CAAV;AACA;AAZJ;;AAeA,sBACE,QAAC,SAAD;AAAW,IAAA,WAAW,EAAC,aAAvB;AAAA,cACG,CAACK,QAAD,EAAWC,QAAX,kBACC;AACE,MAAA,SAAS,EAAC,eADZ;AAEE,MAAA,GAAG,EAAED,QAAQ,CAACE,QAFhB;AAAA,SAGMF,QAAQ,CAACG,cAHf;AAAA,iBAKGN,OAAO,CAACO,GAAR,CAAY,CAACN,IAAD,EAAOO,CAAP,kBACX,QAAC,IAAD,OAAwBP,IAAxB;AAA8B,QAAA,KAAK,EAAEO;AAArC,SAAWP,IAAI,CAACQ,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CALH,EAQGN,QAAQ,CAACO,WARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CApCD;;GAAMb,I;;KAAAA,I;AAsCN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport { Droppable } from \"react-beautiful-dnd\";\nimport { useContext } from \"./context\";\nimport Task from \"./Task\";\n\nconst List = () => {\n  const { tasks, filter } = useContext();\n\n  let filtred = [...tasks];\n\n  switch (filter) {\n    case \"all\":\n      filtred = [...tasks];\n      break;\n    case \"completed\":\n      filtred = tasks.filter((task) => task.completed);\n      break;\n    case \"uncompleted\":\n      filtred = tasks.filter((task) => !task.completed);\n      break;\n    default:\n      filtred = [...tasks];\n      break;\n  }\n\n  return (\n    <Droppable droppableId='droppable-1'>\n      {(provided, snapshot) => (\n        <ul\n          className='tasks-wrapper'\n          ref={provided.innerRef}\n          {...provided.droppableProps}\n        >\n          {filtred.map((task, i) => (\n            <Task key={task.id} {...task} index={i} />\n          ))}\n          {provided.placeholder}\n        </ul>\n      )}\n    </Droppable>\n  );\n};\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}